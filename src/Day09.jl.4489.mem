        - module Day09
        - using AdventOfCode2020
        - using Combinatorics
        - using Base.Iterators
        - 
        - const raw_data = readinput(joinpath(@__DIR__, "Day09_input.txt"))
        - 
        - function check_number(preamble, n)
        -     any(a+b == n for (a, b) in combinations(preamble, 2))
        - end
        - 
        - function part1(numberline, w)
        0     @views for i in 1:length(numberline) - w
        0         s = check_number(numberline[i:i+w-1], numberline[i+w])
        0         if s == false
        0             return numberline[i+w]
        -         end
        -     end
        - end
        - 
        - function solve(data = raw_data)
        -     #numberline = (parse(Int, n.match) for n in eachmatch(r"\d+", data))
       80     numberline = [parse(Int, n.match) for n in eachmatch(r"\d+", data)]
        0     solution1 = part1(numberline, 25)
        -     solution2 = part1(data)
      176     (Part1=solution1, Part2=solution2)
        - end
        - 
        - function part1(data)
        -     missing
        - end
        - 
        - function part2(data)
        -     missing
        - end
        - 
        - end # module
